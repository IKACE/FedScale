# Configuration file of FAR training experiment

# ========== Container configuration ========== 
# whether to use container deployment
use_container: True

# containers need port-mapping to communicate with host machine
ports: [20040, 20040, 20041, 20041]

# containers need a Docker network to communicate with each other
# Create a network by: docker network create --driver=overlay --attachable fedscale-net
container_network: fedscale-net

# containers need a data-path mount to facilitate dataset reuse
# We assume the same data-path is used on all host machines
# data_path: $FEDSCALE_HOME/benchmark
data_path: /users/yilegu/benchmark

# ========== Cluster configuration ========== 
# ip address of the parameter server (need 1 GPU process)
ps_ip: 10.0.0.2

# ip address of each worker:# of available gpus process on each gpu in this node
# Note that if we collocate ps and worker on same GPU, then we need to decrease this number of available processes on that GPU by 1
# E.g., master node has 4 available processes, then 1 for the ps, and worker should be set to: worker:3
worker_ips:  # worker_ip: [(# processes on gpu) for gpu in available_gpus]
    - 10.0.0.1:[2]
    - 10.0.0.2:[1]

exp_path: $FEDSCALE_HOME/examples/containerization

# Entry function of executor and aggregator under $exp_path
executor_entry: executor_ctnr.py

aggregator_entry: aggregator_ctnr.py

auth:
    # ssh_user: ""
    ssh_user: "yilegu"
    ssh_private_key: ~/.ssh/id_rsa

# cmd to run before we can indeed run FAR (in order)
setup_commands:


# ========== Additional job configuration ========== 
# Default parameters are specified in config_parser.py, wherein more description of the parameter can be found

job_conf: 
    - job_name: blog_ctnr                   # Generate logs under this folder: log_path/job_name/time_stamp
    - log_path: /FedScale/benchmark # Path of log files
    - task: nlp
    - num_participants: 5                      # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - data_set: blog                     # Dataset: openImg, google_speech, reddit
    - data_dir: /FedScale/benchmark/dataset/data/blog    # Path of the dataset
    - device_conf_file: /FedScale/benchmark/dataset/data/device_info/client_device_capacity     # Path of the client trace
    - device_avail_file: /FedScale/benchmark/dataset/data/device_info/client_behave_trace
    - model: albert-base-v2                            # Models: e.g., shufflenet_v2_x2_0, mobilenet_v2, resnet34, albert-base-v2
    - eval_interval: 10                     # How many rounds to run a testing on the testing set
    - rounds: 20                          # Number of rounds to run this training. We use 1000 in our paper, while it may converge w/ ~400 rounds
    - filter_less: 21                       # Remove clients w/ less than 21 samples
    - num_loaders: 4                        # Dataloaders 
    - local_steps: 30
    - learning_rate: 4e-5
    - min_learning_rate: 1e-5
    - batch_size: 20
    - test_bsz: 20
    - use_cuda: false


